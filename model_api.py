from dotenv import load_dotenv
import os
from openai import OpenAI
from fetch_data import fetch_data_sleep_readiness, fetch_data_activity


load_dotenv('.env')

# Initialize the client
client = OpenAI(api_key=os.getenv("OPENAI"))

def get_oura_data():
    """Get the latest data from Oura Ring API"""
    readiness_url = 'https://api.ouraring.com/v2/usercollection/daily_readiness'
    sleep_url = 'https://api.ouraring.com/v2/usercollection/daily_sleep'
    activity_url = 'https://api.ouraring.com/v2/usercollection/daily_activity'
    
    readiness = fetch_data_sleep_readiness(readiness_url)
    sleep = fetch_data_sleep_readiness(sleep_url)
    activity = fetch_data_activity(activity_url)
    
    return {
        "sleep": sleep,
        "readiness": readiness,
        "activity": activity
    }

def generate_message(data):
    """
    Generates a personalized message using GPT-4.
    
    Args:
        data (dict): A dictionary containing user metrics (e.g., sleep, activity).
    
    Returns:
        str: A personalized message generated by GPT-4.
    """
    prompt = f"""
You are a helpful health coach writing personalized daily messages based on the following user data:

- Sleep: {data.get('sleep', 'Not provided')}
- Readiness: {data.get('readiness', 'Not provided')}
- Activity: {data.get('activity', 'Not provided')}

Write an engaging and motivational message to help the user achieve their health goals.
"""
    try:
        response = client.chat.completions.create(
            model="gpt-4.1-nano",
            messages=[
                {"role": "system", "content": "You are a health coach who provides motivational advice."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.7
        )
        return response.choices[0].message.content
    except Exception as e:
        return f"Error: {e}"

# Get real Oura Ring data
user_data = get_oura_data()

# Generate and print the message
message = generate_message(user_data)
print("Generated Message:\n", message)